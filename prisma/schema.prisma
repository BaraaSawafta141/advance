generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                  Int       @id @default(autoincrement())
  username            String    @unique
  bio                 String?
  skills              Skill[]   // Relation to the Skill model
  projects            Project[] // Add this line to establish the opposite relation
  assignedTasks       Task[]    // Add this line to establish the opposite relation
  collaboratingProjects Project[] @relation("CollaboratorProject") // Remove references: [id]
  resources           Resource[] // Add this line to establish the opposite relation
}

model Idea {
  id           Int      @id @default(autoincrement())
  description  String
  project      Project  @relation(fields: [projectId], references: [id])
  projectId    Int
}

model Skill {
  id                Int      @id @default(autoincrement())
  skill_type        String
  skill_description String
  projects          Project[] // Add this line to establish the opposite relation
  users             User[]   // Relation to the User model
}

model Project {
  id            Int       @id @default(autoincrement())
  title         String
  description   String
  finished      Boolean   @default(false) 
  difficulty    String    // beginner, intermediate, advanced
  groupSize     Int
  skills        Skill[]   // Relation to the Skill model
  materials     String    // Change from String[] to String
  owner         User      @relation(fields: [ownerId], references: [id]) // Add the opposite relation field
  ownerId       Int
  collaborators User[]    @relation("CollaboratorProject") // Remove references: [id]
  tasks         Task[]    // Relation to the Task model
  ideas         Idea[]    // Relation to the Idea model

}
// Define the Resource model
  model Resource {
    id           Int      @id @default(autoincrement())
    name         String
    description  String
    quantity     Int
    owner        User     @relation(fields: [ownerId], references: [id]) // Add the opposite relation field
    ownerId      Int
  }

model Task {
  id           Int      @id @default(autoincrement())
  description  String
  assignedTo   User?    @relation(fields: [assignedToId], references: [id]) // Add the opposite relation field
  assignedToId Int?
  project      Project  @relation(fields: [projectId], references: [id])
  projectId    Int
}